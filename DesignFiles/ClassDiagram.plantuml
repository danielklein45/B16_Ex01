@startuml
title Facebook Smart View App -  Class Diagram

interface IXmlSerializable {
    +ReadXml(XmlReader reader): void
    +WriteXml(XmlWriter writer): void
}

interface IEnumerable {
    +GetEnumerator(): IEnumerator
}

class FormMain extends Form {
}

class FormLogin extends Form {
}

class FormLoader extends Form {
}

class AppUser {
    -getLastEdu(Education[]): string
    -getUserLivePlace(City): string
    -calcUserAge(string): int
    +constructor(User)
    +GetNewsFeed(PostFilter): FacebookObjectCollection<Post>
    +GetUserAlbums(): FacebookObjectCollection<Album>
    +GetUserProfilePicture(): string
    +PostToUserWall(string): string
    +LikePhoto(string): bool
    +CommentPhoto(string, string): bool
    +Name: string {getter}
    +Birthday: string {getter}
    +Gender: string {getter}
    +Age: int {getter}
    +UserLivesIn: string {getter}
    +LastEducationStudyPlace: string {getter}

}

class LoginLogic{
    +constructor()
    +GetSavedAccessToken(): string
    +SaveAccessToken(string)
    +LoginToFacebook(): LoginResult
    +LoginToFacebookAndSaveToken(): LiginResult
    +ConnectToFacebook(string): LoginResult
    +SaveRememberBox(bool)
    +GetRememberBoxCheckedValue(): bool
}

FormMain *-down-AppUser
FormMain<-down-FormLoader

AppUser "1" o-up- "1" User
AppUser "1" o-up- "*" Post


FormLogin *-down-LoginLogic
FormLogin ->FormLoader
FormLogin ->FormMain

class GeneralVars <<static>> {
}



package "Post Filtering Feature" <<Frame>> {

    class PostFilter{
        +constructor()
        +AddGroup(FilterGroup)
        +RemoveGroup(FilterGroup)
        +Save()
        +FilterGroups: IList<FilterGroup> {getter, setter}
        -load()
    }

    class FilterGroup implements IXmlSerializable, IEnumerable{
        +constructor()
        +AddItem(FilterItem)
        +RemoveItem(FilterItem)
        +IsMatch(Post): bool
        +Name: string {getter, setter}
    }

    class FilterItem  implements IXmlSerializable{
        +constructor()
        +constructor(Regex)
        +IsMatch(Post): bool
     }

     class FormPostFilterSettings extends Form{
        +PostFilter: PostFilter {getter, setter}
     }

     class FormFilterGroup extends Form{
        +GroupFilter: FilterGroup {getter, setter}
     }

    FilterGroup *- FilterItem
    PostFilter *-up- FilterGroup
    FormPostFilterSettings *-left- PostFilter
    FormFilterGroup  *-down- FilterGroup
    FormPostFilterSettings-left->FormFilterGroup 
    FormMain->FormPostFilterSettings
    
}

package "Top Photos Feature" <<Frame>> {

class PopularPanelMgt{
    +CurrentObjectID: string {getter, setter}
    +InformationLabel: Label {getter, setter}
    +InformationTextbox: TextBox {getter, setter}
    +PictureObjectList: List<SpecialPictureBox> {getter}
    +Instance: static PopularPanelMgt {getter}
    -constructor()
    +SetPanels(Panel, Panel)
    +TryAddToPanel(SpecialPictureBox): bool
    -getNextFreeLocationInContainer(Size, out Point): bool
}
PopularPanelMgt "1"*-down- "*" SpecialPictureBox
FormMain *-up-PopularPanelMgt
}

package "Top Photos Feature" <<Frame>> {



class MainFormLoadEventArgs{
    +constructor()
    +FinishedLoading: bool {getter, setter}
    +Message: string {getter, setter}
}

class MainFormLoadEventArgs extends EventArgs {
}

class PictureObjectBasic{
    +constructor(string , int , int , int , string , string)
    +NumberOfLikes: int {getter, setter}
    +NumberOfComment: int {getter, setter}
    +PictureUrl: string {getter, setter}
    +Score: int {getter, setter}
    +ObjectId: string {getter, setter}
}

class PictureObject{
    +constructor(string, int , int , int , string , string,  PictureBox , Label)
    +LoadInformation()
}

class PictureObject extends PictureObjectBasic {
}



class SpecialPictureBox{
    +constructor(Panell)
    +SpecialPictureBoxOnClick(object, EventArgs)
    +UpdateNames(int)
    +RemoveObjectFromPanel()
    +OnMouseHover(EventArgs)
    +OnMouseLeave(EventArgs)
    +ObjectLocation: Point {getter, setter}
    +PictureBoxTopPhotosSize: static Size {getter}
    +PictureObject: PictureObject {getter, setter}
    +FatherPanel: Panel {getter}
    +PicLabel: Label {getter}
}

class SpecialPictureBox extends PictureBox {
}

class TopPhotosFeature{
    +constructor(AppUser , ref List<SpecialPictureBox>)
    +RankUserPhotos()
    +LoadTopPhotos()
}


PictureObjectBasic "*" *-down- "1" FormMain
PictureObject "1" *-down- "1" SpecialPictureBox

TopPhotosFeature "1"*-up- "*" SpecialPictureBox
TopPhotosFeature "1"*-up- "*" PictureObjectBasic
AppUser *-down-TopPhotosFeature

}




@enduml